{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"visualizations","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNe7qZovAYPuSCv3W/bPzoe"},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6cu4-jAo5bK9","executionInfo":{"status":"ok","timestamp":1610372442050,"user_tz":-180,"elapsed":1925,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}},"outputId":"3e2d94ec-d3b4-4edd-9db7-5379a57c03a1"},"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","# enter the foldername in your Drive where you have saved the unzipped\n","# assignment folder, e.g. 'cs231n/assignments/assignment3/'\n","FOLDERNAME = 'comp451/Project/visual-transformer'\n","assert FOLDERNAME is not None, \"[!] Enter the foldername.\"\n","\n","# now that we've mounted your Drive, this ensures that\n","# the Python interpreter of the Colab VM can load\n","# python files from within it.\n","import sys\n","import os\n","sys.path.append('/content/drive/MyDrive/{}'.format(FOLDERNAME))\n","\n","ROOT_PATH = PATH = '/content/drive/MyDrive/comp451/Project/visual-transformer'\n","\n","os.chdir(ROOT_PATH)\n"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pdGE-MX3Z-e6","executionInfo":{"status":"ok","timestamp":1610372442054,"user_tz":-180,"elapsed":1922,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["%load_ext tensorboard"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"w9_2GKON6Vd-","executionInfo":{"status":"ok","timestamp":1610372442500,"user_tz":-180,"elapsed":2364,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["import torch\n","import torch.nn.functional as F\n","import torchvision\n","from torch.utils.tensorboard import SummaryWriter\n","from torch.utils.data import DataLoader, Subset\n","from torchvision import models\n","from models.vt_resnet import VTResNet\n","from models.resnet import BasicBlock\n","import matplotlib.pyplot as plt\n","import random\n","import pickle\n","import PIL\n","import numpy as np"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"wtCegO7WaK7k","executionInfo":{"status":"ok","timestamp":1610372444578,"user_tz":-180,"elapsed":4439,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["import tensorflow as tf\n","import tensorboard as tb\n","tf.io.gfile = tb.compat.tensorflow_stub.io.gfile"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"X0fno9Rw7tAg","executionInfo":{"status":"ok","timestamp":1610372444586,"user_tz":-180,"elapsed":4444,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["def random_seed():\n","    np.random.seed(8)\n","    torch.manual_seed(8)\n","    random.seed(8)"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"5OFPC82vlf_T","executionInfo":{"status":"ok","timestamp":1610372444588,"user_tz":-180,"elapsed":4436,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["!rm -rf ./logs/"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"dbW-FN3c7q0C","executionInfo":{"status":"ok","timestamp":1610372444590,"user_tz":-180,"elapsed":4432,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["def get_data(name):\n","\n","    transform_train = torchvision.transforms.Compose(\n","     [\n","        # torchvision.transforms.RandomHorizontalFlip(),\n","        # torchvision.transforms.RandomRotation(10, resample=PIL.Image.BILINEAR),\n","        # torchvision.transforms.RandomAffine(8, translate=(.15,.15)),\n","        torchvision.transforms.ToTensor(),\n","        torchvision.transforms.Resize((32,32)),\n","        torchvision.transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n","    ])\n","\n","    # (0.485, 0.456, 0.406), (0.229, 0.224, 0.225)\n","\n","    transform_valid = torchvision.transforms.Compose([\n","        torchvision.transforms.ToTensor(),\n","        torchvision.transforms.Resize((32,32)),\n","        torchvision.transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n","    ])\n","\n","    if name == 'CIFAR10':\n","        data_train = torchvision.datasets.CIFAR10('/data', train=True, download=True, transform=transform_train)\n","        data_valid = torchvision.datasets.CIFAR10('/data', train=False, download=True, transform=transform_valid)\n","\n","        return data_train, data_valid\n","    \n","    if name == 'MNIST':\n","        data_train = torchvision.datasets.MNIST('/data', train=True, download=True, transform=transform_train)\n","        data_valid = torchvision.datasets.MNIST('/data', train=False, download=True, transform=transform_valid)\n","\n","        return data_train, data_valid\n","\n","    if name == 'ImageNet':\n","        data_train = torchvision.datasets.ImageNet('/content/drive/MyDrive/comp451/Project/visual-transformer/data', split='train', transform=transform_train)\n","        data_valid = torchvision.datasets.ImageNet('/content/drive/MyDrive/comp451/Project/visual-transformer/data', split='val', transform=transform_valid)\n","\n","        return data_train, data_valid"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qvGyYDs8_2Am","executionInfo":{"status":"ok","timestamp":1610372446295,"user_tz":-180,"elapsed":6120,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}},"outputId":"b8e24867-d0eb-4f25-be78-82f5459a3dbc"},"source":["data_train, data_valid = get_data('CIFAR10')"],"execution_count":8,"outputs":[{"output_type":"stream","text":["Files already downloaded and verified\n","Files already downloaded and verified\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o7H9_xZtZotB","executionInfo":{"status":"ok","timestamp":1610372446296,"user_tz":-180,"elapsed":6114,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["train_loader = DataLoader(data_train, batch_size=4, shuffle=True)\n","valid_loader = DataLoader(data_valid, batch_size=4, shuffle=True)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B2FS9jkFCDVm","executionInfo":{"status":"ok","timestamp":1610372448043,"user_tz":-180,"elapsed":7848,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}},"outputId":"1d735fc5-f9b4-4c3d-8db4-35a616639791"},"source":["L = 8\n","D = 512\n","layer_plane = [64, 128, 256, 512]\n","enc_layer = 2\n","n_head = 8\n","fc_dim = 1024\n","dropout = 0.5\n","model = VTResNet(\n","    resnet_block=BasicBlock,\n","    layers=[2,2,2,2],\n","    tokens=L,\n","    token_channels=D,\n","    input_dim=32,\n","    layer_planes=layer_plane,\n","    transformer_enc_layers=enc_layer,\n","    transformer_heads=n_head,\n","    transformer_fc_dim=fc_dim,\n","    transformer_dropout=dropout,\n","    num_classes=10,\n","    image_channels=3\n",")\n"," \n","model.load_state_dict(torch.load(ROOT_PATH + '/saved_models/model1.pt', map_location=torch.device('cpu')))"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ItOBWWDE_L_","executionInfo":{"status":"ok","timestamp":1610372448045,"user_tz":-180,"elapsed":7838,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}},"outputId":"96c1147e-0979-4319-d61a-34be0e80dadd"},"source":["print(model.vt_layers[0].tokenizer.linear1.weight)"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Parameter containing:\n","tensor([[-0.0041,  0.0577,  0.0451,  ...,  0.0391, -0.0235,  0.0219],\n","        [-0.0603, -0.0192,  0.2200,  ...,  0.0099,  0.0763,  0.0357],\n","        [ 0.0048,  0.0481,  0.0566,  ..., -0.1940,  0.0467, -0.0719],\n","        ...,\n","        [-0.0710, -0.0377, -0.0459,  ..., -0.0771, -0.0134,  0.0165],\n","        [ 0.0152,  0.0658,  0.0200,  ...,  0.0690, -0.0393,  0.0198],\n","        [ 0.1962,  0.0982, -0.0028,  ...,  0.1017,  0.0297, -0.1728]],\n","       requires_grad=True)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Xku7biB2FWK_","executionInfo":{"status":"ok","timestamp":1610372448046,"user_tz":-180,"elapsed":7835,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["writer = SummaryWriter('logs')"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"WAivQWdGlMWE","executionInfo":{"status":"ok","timestamp":1610372448047,"user_tz":-180,"elapsed":7831,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["writer.add_histogram('vt_layer_1_tokenizer_linear1_weights', model.vt_layers[1].tokenizer.linear1.weight, global_step=1)\n","writer.add_histogram('vt_layer_0_tokenizer_linear1_weights', model.vt_layers[0].tokenizer.linear1.weight, global_step=1)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"f6XdLrl5QeR_","executionInfo":{"status":"ok","timestamp":1610372448049,"user_tz":-180,"elapsed":7830,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["classes = ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J')"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"Kw5FUZ1-FaZ3","executionInfo":{"status":"ok","timestamp":1610372448051,"user_tz":-180,"elapsed":7829,"user":{"displayName":"NAZIR NAYAL","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh3OuRg33h4ycTYmZ37Pu08eeoPEwOOBicBVUPJ-A=s64","userId":"13047279340238858245"}}},"source":["# def select_n_random(data, labels, n=100):\n","#     '''\n","#     Selects n random datapoints and their corresponding labels from a dataset\n","#     '''\n","#     assert len(data) == len(labels)\n","\n","#     perm = torch.randperm(len(data))\n","#     return data[perm][:n], labels[perm][:n]\n","\n","# # select random images and their target indices\n","# images, labels = select_n_random(data_train.data, np.array(data_train.targets))\n","\n","# # get the class labels for each image\n","# class_labels = [classes[lab] for lab in labels]\n","\n","# # log embeddings\n","# features = images.reshape(-1, 32 * 32 * 3)\n","# writer.add_embedding(features,\n","#                     metadata=class_labels)\n","# writer.close()"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"XZ3eaq3ImM4-"},"source":["# 1. gets the probability predictions in a test_size x num_classes Tensor\n","# 2. gets the preds in a test_size Tensor\n","# takes ~10 seconds to run\n","class_probs = []\n","class_preds = []\n","with torch.no_grad():\n","    for data in valid_loader:\n","        images, labels = data\n","        output = model(images)\n","        class_probs_batch = [F.softmax(el, dim=0) for el in output]\n","        _, class_preds_batch = torch.max(output, 1)\n","\n","        class_probs.append(class_probs_batch)\n","        class_preds.append(class_preds_batch)\n","\n","test_probs = torch.cat([torch.stack(batch) for batch in class_probs])\n","test_preds = torch.cat(class_preds)\n","\n","def add_pr_curve_tensorboard(class_index, test_probs, test_preds, global_step=0):\n","    '''\n","    Takes in a \"class_index\" from 0 to 9 and plots the corresponding\n","    precision-recall curve\n","    '''\n","    tensorboard_preds = test_preds == class_index\n","    tensorboard_probs = test_probs[:, class_index]\n","\n","    writer.add_pr_curve(classes[class_index],\n","                        tensorboard_preds,\n","                        tensorboard_probs,\n","                        global_step=global_step)\n","    # writer.close()\n","\n","# plot all the pr curves\n","for i in range(len(classes)):\n","    add_pr_curve_tensorboard(i, test_probs, test_preds)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9X5bghk2Fahd"},"source":["%tensorboard --logdir logs"],"execution_count":null,"outputs":[]}]}